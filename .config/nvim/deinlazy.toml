# ref: https://github.com/Shougo/denite.nvim/blob/master/doc/denite.txt
# ref: https://zaief.jp/vim/denite
[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap <silent> <C-k><C-f> :<C-u>Denite -start-filter file/rec<CR>
  nnoremap <silent> <C-k><C-u> :<C-u>Denite file_mru<CR> " MRU (Most Recently Used) plugin
  nnoremap <silent> <C-k><C-l> :<C-u>Denite line<CR>
  nnoremap <silent> <C-k><C-e> :<C-u>Denite buffer<CR>
  nnoremap <silent> <C-k><C-r> :<C-u>Denite register<CR>
'''
hook_post_source = '''
  " Define mappings
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
      \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
      \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
      \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
      \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> <Esc>
      \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
      \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
      \ denite#do_map('toggle_select').'j'
  endfunction

  autocmd FileType denite-filter call s:denite_filter_my_settings()
  function! s:denite_filter_my_settings() abort
    imap <silent><buffer> <Esc> <Plug>(denite_filter_quit)
  endfunction

  " Change file/rec command.
  call denite#custom#var('file/rec', 'command',
    \ ['rg', '--files', '--glob', '!.git', '--color', 'never'])

  " Change matchers.
  call denite#custom#source(
    \ 'file/rec', 'matchers', ['matcher/fuzzy'])


  " Change ignore_globs
  call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
        \ [ '.git/', '.ropeproject/', '__pycache__/',
        \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/', 'node_modules/', '_next'])

  "Change mappings.
  call denite#custom#map(
        \ 'insert',
        \ '<C-j>',
        \ '<denite:move_to_next_line>',
        \ 'noremap'
        \)
  call denite#custom#map(
        \ 'insert',
        \ '<C-k>',
        \ '<denite:move_to_previous_line>',
        \ 'noremap'
        \)
'''

# [[plugins]]
# repo = 'Shougo/neosnippet-snippets'
[[plugins]]
repo = 'honza/vim-snippets'


[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  set completeopt-=preview
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"

  " https://qiita.com/suketa/items/c368b3acd11403c23169#%E8%A8%AD%E5%AE%9A%E3%81%AE%E8%BF%BD%E5%8A%A0
  call deoplete#custom#var('omni', 'input_patterns', {
      \ 'ruby': ['[^. *\t]\.\w*', '[a-zA-Z_]\w*::'],
  \})
'''
on_i = 1

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
build = 'npm i -g tern'
hook_source = '''
  let g:tern_request_timeout = 1
  let g:tern_show_signature_in_pum = '0'  " This do disable full signature type on autocomplete
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent><C-s> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif

  let g:neosnippet#enable_snipmate_compatibility = 1
'''
on_i  = 1
on_ft = ['snippet']
depends = ['vim-snippets']


[[plugins]]
repo = 'osyo-manga/vim-monster'
hook_add = '''
  let g:monster#completion#backend = 'solargraph'
  let g:monster#completion#solargraph#backend = "async_solargraph_suggest"
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
rev = 'next'
build = 'bash install.sh'
hook_add = '''
  " https://qiita.com/suketa/items/c368b3acd11403c23169#%E8%A8%AD%E5%AE%9A%E3%81%AE%E8%BF%BD%E5%8A%A0
  let g:LanguageClient_serverCommands = {
      \ 'ruby': ['solargraph'],
  \}
'''
